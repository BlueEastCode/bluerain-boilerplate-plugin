{"version":3,"sources":["../../blueeast/bluerain-cli/packages/web/src/config/customConfigs.js"],"names":["customConfigs","_config","config","requireFunc","__webpack_require__","__non_webpack_require__","require","customConfigPath","path","resolve","bluerainDir","fs","existsSync","title","level","message","customConfig","default"],"mappings":";;;;;;;;kBAKwBA,a;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEe,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;;AAE7C;AACA,QAAMC,sBAAcD,OAAd,CAAN;;AAEA;AACA,QAAME,cAAc,OAAOC,mBAAP,KAA+B,UAA/B,GAA4CC,uBAA5C,GAAsEC,OAA1F;AACA,QAAMC,mBAAmBC,eAAKC,OAAL,CAAaP,OAAOQ,WAApB,EAAiC,WAAjC,CAAzB;;AAEA,MAAI,CAACC,aAAGC,UAAH,CAAcL,gBAAd,CAAL,EAAsC;AACpC,oBAAI;AACFM,aAAO,SADL;AAEFC,aAAO,MAFL;AAGFC,eAAS;AAHP,KAAJ;AAKA,WAAOb,MAAP;AACD;;AAED,QAAMc,eAAeb,YAAYI,gBAAZ,EAA8BU,OAAnD,CAlB6C,CAkBe;;AAE5D,MAAI,OAAOD,YAAP,KAAwB,UAA5B,EAAwC;AACtC,oBAAI;AACFH,aAAO,SADL;AAEFC,aAAO,MAFL;AAGFC,eAAS;AAHP,KAAJ;AAKA,WAAOC,aAAad,MAAb,CAAP;AACD;;AAED,kBAAI;AACFW,WAAO,SADL;AAEFC,WAAO,MAFL;AAGFC,aAAS;AAHP,GAAJ;;AAMA,SAAO,yBAAUb,MAAV,EAAkBc,YAAlB,CAAP;AACD","file":"customConfigs.js","sourceRoot":"/home/nasir/github-nasir/bluerain-boilerplate-plugin","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport deepmerge from 'deepmerge';\nimport { log } from '../internal/utils';\n\nexport default function customConfigs(_config) {\n\n  // So incoming configs are not mutated\n  const config = { ..._config };\n\n  // Dynamically requiring a module for both node and webpack. \n  const requireFunc = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require;\n  const customConfigPath = path.resolve(config.bluerainDir, 'config.js');\n\n  if (!fs.existsSync(customConfigPath)) {\n    log({\n      title: 'Configs',\n      level: 'info',\n      message: 'Using default configurations.',\n    });\n    return config;\n  }\n\n  const customConfig = requireFunc(customConfigPath).default; // eslint-disable-line\n\n  if (typeof customConfig === 'function') {\n    log({\n      title: 'Configs',\n      level: 'info',\n      message: 'Loading custom configurations (full-control mode).',\n    });\n    return customConfig(config);\n  }\n\n  log({\n    title: 'Configs',\n    level: 'info',\n    message: 'Loading custom configurations (extending mode).',\n  });\n\n  return deepmerge(config, customConfig);\n}\n"]}