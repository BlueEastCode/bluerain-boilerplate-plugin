{"version":3,"sources":["../../blueeast/bluerain-cli/packages/web/src/config/components/ClientConfig.js"],"names":["values","clientConfig","clientConfigFilter","serializedClientConfig","ClientConfig","nonce","__html","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,8BAAf;;AAEA;AACA;AACA,MAAMC,eAAe;AACnB;AACAD,OAAOE,kBAFY;AAGnB;AACAF,MAJmB,CAArB;;AAOA,MAAMG,yBAAyB,mCAAUF,YAAV,CAA/B;;AAEA;;;;;;;AAOA,SAASG,YAAT,CAAsB,EAAEC,KAAF,EAAtB,EAAiC;AAC/B;AAAA,UAES,iBAFT;AAAA,WAGWA,KAHX;AAAA,6BAK6B;AACvBC,cAAS,4BAA2BH,sBAAuB;AADpC;AAL7B;AAUD;;AAEDC,aAAaG,SAAb,GAAyB;AACvBF,SAAOG,oBAAUC,MAAV,CAAiBC;AADD,CAAzB;;kBAIeN,Y","file":"ClientConfig.js","sourceRoot":"/home/nasir/github-nasir/bluerain-boilerplate-plugin","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport serialize from 'serialize-javascript';\nimport filterWithRules from '../../shared/utils/objects/filterWithRules';\nimport configFactory from '../configFactory';\n\nconst values = configFactory();\n\n// Filter the config down to the properties that are allowed to be included\n// in the HTML response.\nconst clientConfig = filterWithRules(\n  // These are the rules used to filter the config.\n  values.clientConfigFilter,\n  // The config values to filter.\n  values,\n);\n\nconst serializedClientConfig = serialize(clientConfig);\n\n/**\n * A react component that generates a script tag that binds the allowed\n * values to the window so that config values can be read within the\n * browser.\n *\n * They get bound to window.__CLIENT_CONFIG__\n */\nfunction ClientConfig({ nonce }) {\n  return (\n    <script\n      type=\"text/javascript\"\n      nonce={nonce}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: `window.__CLIENT_CONFIG__=${serializedClientConfig}`,\n      }}\n    />\n  );\n}\n\nClientConfig.propTypes = {\n  nonce: PropTypes.string.isRequired,\n};\n\nexport default ClientConfig;\n"]}